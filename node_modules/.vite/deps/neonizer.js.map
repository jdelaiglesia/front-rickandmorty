{
  "version": 3,
  "sources": ["../../neonizer/index.js"],
  "sourcesContent": ["import React, { useState, useEffect } from \"react\";\r\n\r\n/**\r\n * Neonizer component applies vibrant neon color effects to text content.\r\n * @param {Object} props - Component props.\r\n * @param {React.ReactNode} props.children - The text content to be styled with neon effect.\r\n * @param {string} [props.className=\"\"] - Additional CSS classes for styling.\r\n * @param {number} [props.time=2000] - Time interval in milliseconds for color change (default: 2000ms).\r\n * @param {string[]} [props.excludeColors=[]] - Colors to exclude from the random selection.\r\n * @param {string[]} [props.newColors=[]] - Additional colors to include in the random selection.\r\n * @returns {JSX.Element} - JSX element with the styled neon text.\r\n */\r\nconst Neonizer = ({\r\n  children,\r\n  className = \"\",\r\n  time = 2000,\r\n  excludeColors = [],\r\n  newColors = [],\r\n}) => {\r\n  const [currentColor, setCurrentColor] = useState(\"\");\r\n\r\n  const baseColors = [\r\n    \"#1f51ff\", // neon_blue\r\n    \"#0ff0fc\", // electric_cyan\r\n    \"#bc13fe\", // neon_purple\r\n    \"#8a2be2\", // proton_purple\r\n    \"#ff44cc\", // neon_pink\r\n    \"#ea00ff\", // neon_magenta\r\n    \"#ff1493\", // plastic_pink\r\n    \"#fff01f\", // neon_yellow\r\n    \"#e7ee4f\", // absinthe\r\n    \"#dfff00\", // chartreuse_yellow\r\n    \"#ff3131\", // neon_red\r\n    \"#ff5e00\", // electric_orange\r\n    \"#39ff14\", // neon_green\r\n    \"#7fff00\", // ufo_green\r\n    \"#ccff00\", // electric_lime\r\n  ];\r\n\r\n  const normalizeColorCode = (color) => {\r\n    if (!color.startsWith(\"#\")) {\r\n      return `#${color}`;\r\n    }\r\n    return color;\r\n  };\r\n\r\n  const normalizeColors = (colors) => {\r\n    return colors.map((color) => normalizeColorCode(color));\r\n  };\r\n\r\n  // Filtering out empty strings from newColors and excludeColors\r\n  const filteredNewColors = newColors.filter((color) => color.trim() !== \"\");\r\n  const filteredExcludeColors = excludeColors.filter(\r\n    (color) => color.trim() !== \"\"\r\n  );\r\n\r\n  const colors = [\r\n    ...normalizeColors(baseColors),\r\n    ...normalizeColors(filteredNewColors),\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentColor(getRandomColor(colors, filteredExcludeColors));\r\n    }, time);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const getRandomColor = (colors, exclude) => {\r\n    let updatedColors = colors.filter(\r\n      (color) => !exclude.includes(normalizeColorCode(color))\r\n    );\r\n    return updatedColors[Math.floor(Math.random() * updatedColors.length)];\r\n  };\r\n\r\n  const neonStyle = {\r\n    color: currentColor,\r\n    transitionProperty: \"all\",\r\n    transitionDuration: \"500ms\",\r\n  };\r\n\r\n  return (\r\n    <span className={`${className}`} style={neonStyle}>\r\n      {children}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default Neonizer;\r\n"],
  "mappings": ";;;;;;;;AAAA,mBAA2C;AAY3C,IAAM,WAAW,CAAC;AAAA,EAChB;AAAA,EACA,YAAY;AAAA,EACZ,OAAO;AAAA,EACP,gBAAgB,CAAC;AAAA,EACjB,YAAY,CAAC;AACf,MAAM;AACJ,QAAM,CAAC,cAAc,eAAe,QAAI,uBAAS,EAAE;AAEnD,QAAM,aAAa;AAAA,IACjB;AAAA;AAAA,IACA;AAAA;AAAA,IACA;AAAA;AAAA,IACA;AAAA;AAAA,IACA;AAAA;AAAA,IACA;AAAA;AAAA,IACA;AAAA;AAAA,IACA;AAAA;AAAA,IACA;AAAA;AAAA,IACA;AAAA;AAAA,IACA;AAAA;AAAA,IACA;AAAA;AAAA,IACA;AAAA;AAAA,IACA;AAAA;AAAA,IACA;AAAA;AAAA,EACF;AAEA,QAAM,qBAAqB,CAAC,UAAU;AACpC,QAAI,CAAC,MAAM,WAAW,GAAG,GAAG;AAC1B,aAAO,IAAI,KAAK;AAAA,IAClB;AACA,WAAO;AAAA,EACT;AAEA,QAAM,kBAAkB,CAACA,YAAW;AAClC,WAAOA,QAAO,IAAI,CAAC,UAAU,mBAAmB,KAAK,CAAC;AAAA,EACxD;AAGA,QAAM,oBAAoB,UAAU,OAAO,CAAC,UAAU,MAAM,KAAK,MAAM,EAAE;AACzE,QAAM,wBAAwB,cAAc;AAAA,IAC1C,CAAC,UAAU,MAAM,KAAK,MAAM;AAAA,EAC9B;AAEA,QAAM,SAAS;AAAA,IACb,GAAG,gBAAgB,UAAU;AAAA,IAC7B,GAAG,gBAAgB,iBAAiB;AAAA,EACtC;AAEA,8BAAU,MAAM;AACd,UAAM,WAAW,YAAY,MAAM;AACjC,sBAAgB,eAAe,QAAQ,qBAAqB,CAAC;AAAA,IAC/D,GAAG,IAAI;AAEP,WAAO,MAAM,cAAc,QAAQ;AAAA,EACrC,GAAG,CAAC,CAAC;AAEL,QAAM,iBAAiB,CAACA,SAAQ,YAAY;AAC1C,QAAI,gBAAgBA,QAAO;AAAA,MACzB,CAAC,UAAU,CAAC,QAAQ,SAAS,mBAAmB,KAAK,CAAC;AAAA,IACxD;AACA,WAAO,cAAc,KAAK,MAAM,KAAK,OAAO,IAAI,cAAc,MAAM,CAAC;AAAA,EACvE;AAEA,QAAM,YAAY;AAAA,IAChB,OAAO;AAAA,IACP,oBAAoB;AAAA,IACpB,oBAAoB;AAAA,EACtB;AAEA,SACE,aAAAC,QAAA,cAAC,UAAK,WAAW,GAAG,SAAS,IAAI,OAAO,aACrC,QACH;AAEJ;AAEA,IAAO,mBAAQ;",
  "names": ["colors", "React"]
}
